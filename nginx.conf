# 定義一個上游伺服器區塊，指向我們的 Django 應用容器
# 'web' 是我們在 docker-compose.yml 中定義的 Django 服務名稱
# 8000 是 Gunicorn 在 Docker 網路內部監聽的端口 (與 Dockerfile 的 EXPOSE 和 CMD 一致)
upstream django_app {
    server web:8000;
}

# 定義主伺服器區塊
server {
    # Nginx 容器監聽 80 端口 (這是容器內部的端口)
    listen 80;

    # 處理靜態檔案的請求 (URL 以 /static/ 開頭)
    location /static/ {
        # alias 指向容器內靜態檔案存放的路徑
        # 這個路徑必須和 docker-compose.yml 中 nginx 服務掛載的 static_volume 路徑一致
        # 並且也是 Django collectstatic 收集的目標 (相對於容器內 /app)
        alias /app/staticfiles/;
    }

    # 處理媒體檔案的請求 (URL 以 /media/ 開頭)
    location /media/ {
        # alias 指向容器內媒體檔案存放的路徑
        # 這個路徑必須和 docker-compose.yml 中 nginx 服務掛載的 media volume 路徑一致
        alias /app/media/;
    }

    # 處理所有其他的請求 (轉發給 Django/Gunicorn)
    location / {
        # 將請求傳遞給上面定義的 upstream (也就是 web:8000)
        proxy_pass http://django_app;

        # 設定必要的請求標頭，讓後端 Django 應用能獲取原始請求資訊
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # 確保 Django 知道是用 http 還是 https
    }
}